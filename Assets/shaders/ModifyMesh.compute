// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWStructuredBuffer<float3>		_VertexBuffer;
StructuredBuffer<float3>		_InitialPositionBuffer;
StructuredBuffer<float3>		_InitialNormalBuffer;
RWStructuredBuffer<float3>		_ImpactPositionBuffer;
StructuredBuffer<float4>		_ColorsBuffer;

float  _Time;
float _pushforce;
float _elacticity;
float _drag;

[numthreads(1024,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	
	float3 normOther = _ImpactPositionBuffer[id.x];
	float3 normInit =_InitialPositionBuffer[id.x];
	float3 impact = pow(1.0 / distance(normOther, normInit), 2) * -_InitialNormalBuffer[id.x]
		* length(normOther / 2) / _drag;
	_VertexBuffer[id.x] = (impact * (_ColorsBuffer[id.x])) + normInit;
	_ImpactPositionBuffer[id.x] /= _elacticity;
}
